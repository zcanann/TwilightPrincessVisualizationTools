<ResourceDictionary
    x:Class="Twilight.View.Styles.AvalonDockOverrides.AnchorablePaneTitle"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:avalonDock="clr-namespace:AvalonDock;assembly=AvalonDock"
	xmlns:avalonDockControls="clr-namespace:AvalonDock.Controls;assembly=AvalonDock"
	xmlns:avalonDockConverters="clr-namespace:AvalonDock.Converters;assembly=AvalonDock"
	xmlns:avalonDockLayout="clr-namespace:AvalonDock.Layout;assembly=AvalonDock"
	xmlns:avalonDockProperties="clr-namespace:AvalonDock.Properties;assembly=AvalonDock">
    <!-- This should be kept as identical as possible to the original AvalonDock implementation. This style is only overwritten to hide some header buttons in anchorable windows. -->
    <Style TargetType="{x:Type avalonDockControls:AnchorablePaneTitle}" BasedOn="{StaticResource {x:Type avalonDockControls:AnchorablePaneTitle}}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <avalonDockControls:DropDownControlArea DropDownContextMenu="{Binding Model.Root.Manager.AnchorableContextMenu, RelativeSource={RelativeSource TemplatedParent}}" DropDownContextMenuDataContext="{Binding Path=LayoutItem, RelativeSource={RelativeSource TemplatedParent}}">
                                <ContentPresenter
									Content="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}"
									ContentTemplate="{Binding Model.Root.Manager.AnchorableTitleTemplate, RelativeSource={RelativeSource TemplatedParent}}"
									ContentTemplateSelector="{Binding Model.Root.Manager.AnchorableTitleTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}" />
                            </avalonDockControls:DropDownControlArea>

                            <!-- Zac: changed to always hidden -->
                            <avalonDockControls:DropDownButton
								Grid.Column="1"
								DropDownContextMenu="{Binding Model.Root.Manager.AnchorableContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
								DropDownContextMenuDataContext="{Binding Path=LayoutItem, RelativeSource={RelativeSource TemplatedParent}}"
								Focusable="False"
								Style="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}"
								ToolTip="{x:Static avalonDockProperties:Resources.Anchorable_CxMenu_Hint}"
                                Visibility="Hidden">
                                <Border Background="Transparent">
                                    <Image Source="/AvalonDock;component/Themes/Generic/Images/PinMenu.png" />
                                </Border>
                            </avalonDockControls:DropDownButton>

                            <!-- Zac: changed to always hidden -->
                            <Button
								x:Name="PART_AutoHidePin"
								Grid.Column="2"
								Command="{Binding Path=LayoutItem.AutoHideCommand, RelativeSource={RelativeSource TemplatedParent}}"
								Focusable="False"
								Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
								ToolTip="{x:Static avalonDockProperties:Resources.Anchorable_BtnAutoHide_Hint}"
								Visibility="Hidden">
                                <Border Background="Transparent">
                                    <Image Source="/AvalonDock;component/Themes/Generic/Images/PinAutoHide.png" />
                                </Border>
                            </Button>

                            <Button
								x:Name="PART_HidePin"
								Grid.Column="3"
								Command="{Binding Path=LayoutItem.HideCommand, RelativeSource={RelativeSource TemplatedParent}}"
								Focusable="False"
								Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
								ToolTip="{x:Static avalonDockProperties:Resources.Anchorable_BtnClose_Hint}"
								Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={avalonDockConverters:BoolToVisibilityConverter}}">
                                <Border Background="Transparent">
                                    <Image Source="/AvalonDock;component/Themes/Generic/Images/PinClose.png" />
                                </Border>
                            </Button>


                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Model.IsAutoHidden, RelativeSource={RelativeSource Mode=Self}}" Value="True">
                            <Setter TargetName="PART_AutoHidePin" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="90" />
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Model.CanClose, RelativeSource={RelativeSource Mode=Self}}" Value="True">
                            <Setter TargetName="PART_HidePin" Property="Command" Value="{Binding Path=LayoutItem.CloseCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="PART_HidePin" Property="ToolTip" Value="{x:Static avalonDockProperties:Resources.Document_Close}" />

                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>